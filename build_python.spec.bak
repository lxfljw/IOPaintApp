# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['main.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('iopaint', 'iopaint'),
        ('requirements.txt', '.'),
        ('models/big-lama.pt', 'models'),
    ],
    hiddenimports=[
        'iopaint',
        'iopaint.api',
        'iopaint.cli',
        'iopaint.const',
        'iopaint.runtime',
        'iopaint.schema',
        'iopaint.download',
        'iopaint.batch_processing',
        'fastapi',
        'uvicorn',
        'gradio',
        'torch',
        'torchvision',
        'diffusers',
        'transformers',
        'opencv-python',
        'PIL',
        'numpy',
        'loguru',
        'typer',
        'pydantic',
        'rich',
        'yacs',
        'omegaconf',
        'easydict',
        'piexif',
        'typer-config',
        'python-multipart',
        'python-socketio',
        'huggingface_hub',
        'accelerate',
        'peft',
        'safetensors',
        'controlnet-aux',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='iopaint_server',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
) 